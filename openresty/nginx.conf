#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
pid        logs/nginx.pid;
worker_rlimit_nofile 65535;

events {
    worker_connections  1024;
     accept_mutex_delay 500ms;
     #debug_connection 127.0.0.1;
       }

http {
  include     ./conf/mime.types;
  include     ./conf/proxy.conf;
  include     ./conf/fastcgi.conf;
  index    index.html index.htm index.php;
  default_type application/octet-stream;
  log_format   main '$remote_addr rt=$request_time uct=$upstream_connect_time $remote_user $time_local $status $request $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for $request_time $request_length $bytes_sent $gzip_ratio $http_referer';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  keepalive_timeout 60;
  client_header_buffer_size 2k;
  server_names_hash_bucket_size 128; # this seems to be required for some vhosts
  gzip  on;
  map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    server {
        listen       80;
        server_name  localhost;
        gzip         on;
        charset utf-8;
        index  index.html index.htm;
        access_log  logs/80.access.log  main;
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            #root   html;
        }
         location / {
                proxy_pass http://127.0.0.1:5000/;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
        }
        location ~ /\.ht {
            deny  all;
        }
        location /robots.txt {
            alias ./robots.txt;#C:\openresty-1.15.8.1rc1-win64\html\robots.txt;
            }
        location = /gateway.txt
        { 
            add_header Access-Control-Allow-Origin *;
            alias gateway.txt;
        }
        location /lua{
          default_type text/html;
            content_by_lua_block {
                ngx.say("<p>hello,  i am lua...</p>")
            }
        }
        #https://github.com/openresty/redis2-nginx-module
        location = /get {
            set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
            redis2_query get $key;
            redis2_query select 2;
            redis2_pass 127.0.0.1:6379;
                }
        location = /redis2/set {
            set_unescape_uri $key $arg_key;  # this requires ngx_set_misc
            set_unescape_uri $val $arg_val;  # this requires ngx_set_misc
            redis2_query set $key $val;
            redis2_query select 2;
            redis2_pass 127.0.0.1:6379;
                }
        location =/proxy {
            proxy_pass http://10.0.1.5:8081;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
    upstream hubs.com {
        server 10.0.1.5:8081 weight=3;
        server 10.0.1.5:8082 weight=3;
        server 10.0.1.5:8083 weight=3;
        server 10.0.1.4:8081 weight=1;
  }
    # another virtual host using mix of IP-, name-, and port-based configuration
 server {
        listen       0.0.0.0:4096;
        access_log  logs/4096.access.log  main;
        server_name  somename  alias  another.alias;
        location / {
            proxy_pass http://10.0.1.5:8081;
            index  default.aspx index.htm;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $http_connection;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_cache_key $host$uri$is_args$args;
          
            proxy_set_header Connection $connection_upgrade;
            #proxy_set_header Host $host:28080;
            #proxy_set_header X-Forwarded-For $remote_addr;
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-From-IP $remote_addr;

            proxy_set_header Cookie $http_cookie;
            proxy_cookie_path /core/ /PayPlatform/;
            }
 }
 upstream websocket {
        server 47.101.56.224:8899 weight=1;
        server 47.101.176.228:8899 weight=2;

        server 127.0.0.1:1024 weight=3;
        #server 114.67.236.124:80 weight=4;
  }
   # HTTPS server
   # server {
   #     listen       443 ssl;
   #     server_name  localhost;
#
   #     ssl_certificate      cert.pem;
   #     ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
   #     ssl_session_timeout  5m;

   #    ssl_ciphers  HIGH:!aNULL:!MD5;
   #    ssl_prefer_server_ciphers  on;

    #    location / {
   #        root   html;
   #         index  index.html index.htm;
  #     }
   # }
}

stream
	{
    open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;
    log_format  combined '$time_iso8601 $remote_addr  $protocol $status $bytes_sent $bytes_received $session_time $upstream_addr $upstream_bytes_sent $upstream_bytes_received $upstream_connect_time';
    access_log      logs/stream-access.log  combined  buffer=1k flush=5s ;
    include *.stream.conf;
		upstream  QuotePush
		{
        hash $remote_addr consistent;
        zone dynamic 64k;
        #server 47.101.56.224:2688 weight=1;
        #server 47.101.176.228:2688 weight=2;
        
        server 47.101.211.63:2688 max_conns=200  weight=3;
        server 47.101.211.63:12688 weight=4;
        server 127.0.0.1:6379      weight=3      max_fails=3 fail_timeout=30s;
		}
		server 
		{
        listen 0.0.0.0:4388 ;
        proxy_connect_timeout 5s;
        proxy_timeout 3s;
        proxy_protocol on;
        proxy_pass QuotePush;
        proxy_responses 2;
        error_log logs/tcp_log.log;
		}
    
    upstream Redis
		{
        hash $remote_addr consistent;
       # server 10.0.0.3:6379 weight=3;
       server 127.0.0.12:6379 weight=3;
       #server 114.67.236.124:6379            max_fails=3 fail_timeout=30s;
		}
		server 
		{
        listen 0.0.0.0:16379;
        proxy_connect_timeout 5s;
        proxy_timeout 3s;
        proxy_pass Redis;
		}
	}
